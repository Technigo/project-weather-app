* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Montserrat', sans-serif;
}

.wrap {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.main-container {
  padding: 12px 25px;
  width: 100%;
  max-width: 450px;
  z-index: 999;
}

.des::first-letter {
  text-transform: capitalize;
}

.first-row {
  display: flex;
}

.des, .temp {
  margin: 0;
}

.symbol {
  margin: auto 5px;
}

.feel-rise-set {
  margin: 5px auto;
}

.img {
  display: block;
  margin: 40px 0px 30px 0px;
  height: 60px;
  width: auto;
}

.details {
  font-size: 15px;
}

.forecast {
  padding-bottom: 5px;
  font-size: 17px;
}

.sum-message {
  font-size: 25px;
  font-weight: bold;
  margin: 5px auto;
  padding-right: 10px;
}

.day {
  align-items: center;
  display: grid;
  grid-template-columns: 2fr 1fr 2fr;
  justify-content: space-between;
  margin: 3px 0px;
  border-bottom: 1px dotted #fff;
}

.weekday{
  justify-self: start;
}

.icon-image {
  justify-self: center;
}

.temper {
  justify-self: end;
}
.search {
  text-align: center;
}

.city-select {
  font-size: 15px;
  height: 30px;
  padding: 5px;
  box-shadow: 2px 2px 2px rbga(0, 0, 0, 1);
  box-shadow: 2px 2px 2px #888888;
  border-radius: 5px;
}

.mylocation {
  font-size: 15px;
  margin: 5px 0 5px 30px;
  background-color: rgba(0,0,0,0.4);
  height: 30px;
  color: #fff;
  box-shadow: rgba (0,0,0,0.19);
}

.background-container {
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
  top: 0;
  z-index: -999;
}

.background-video {
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.wobble {
  animation: 2s wobble ease;
}

@keyframes wobble {
  from {
    transform: translate3d(0, 0, 0);
  }

  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}
