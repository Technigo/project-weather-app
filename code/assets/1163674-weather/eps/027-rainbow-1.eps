%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.2 (http://cairographics.org)
%%CreationDate: Tue Oct  2 09:27:16 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 104 480 376
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 104 480 376
%%EndPageSetup
q 0 104 480 272 rectclip q
q
240 376 m 107.516 375.852 0.148 268.484 0 136 c 0 112 l 0 107.582 3.582
 104 8 104 c 104 104 l 108.418 104 112 107.582 112 112 c 112 136 l 112 206.691
 169.309 264 240 264 c 310.691 264 368 206.691 368 136 c 368 112 l 368 107.582
 371.582 104 376 104 c 472 104 l 476.418 104 480 107.582 480 112 c 480 136
 l 479.852 268.484 372.484 375.852 240 376 c h
384 120 m 384 136 l 384 215.527 319.527 280 240 280 c 160.473 280 96 215.527
 96 136 c 96 120 l 80 120 l 80 136 l 80 224.367 151.633 296 240 296 c 328.367
 296 400 224.367 400 136 c 400 120 l h
416 120 m 416 136 l 416 233.203 337.203 312 240 312 c 142.797 312 64 233.203
 64 136 c 64 120 l 48 120 l 48 136 l 48 242.039 133.961 328 240 328 c 346.039
 328 432 242.039 432 136 c 432 120 l h
464 120 m 448 120 l 448 136 l 448 250.875 354.875 344 240 344 c 125.125
 344 32 250.875 32 136 c 32 120 l 16 120 l 16 136 l 16 259.711 116.289 360
 240 360 c 363.711 360 464 259.711 464 136 c h
464 120 m W n
[1 0 0 -1 0 376] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0705882 0.760784 0.913725 ]
      /C1 [ 0.768627 0.443137 0.929412 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.768627 0.443137 0.929412 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.964706 0.309804 0.34902 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   ]
   /Bounds [ 0.5 0.982 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 240 272 240 0 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end restore
%%EOF
