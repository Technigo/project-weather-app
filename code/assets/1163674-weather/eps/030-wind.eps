%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.2 (http://cairographics.org)
%%CreationDate: Tue Oct  2 09:27:16 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 24 480 456
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 24 480 456
%%EndPageSetup
q 0 24 480 432 rectclip q
q
0 216 m 0 348.547 107.453 456 240 456 c 372.547 456 480 348.547 480 216
 c 480 108.336 392.152 24 280 24 c 167.848 24 80 108.336 80 216 c 80 299.949
 148.051 368 232 368 c 315.949 368 384 299.949 384 216 c 384 158.562 337.438
 112 280 112 c 222.562 112 176 158.562 176 216 c 176 246.93 201.07 272 232
 272 c 262.93 272 288 246.93 288 216 c 288 211.582 284.418 208 280 208 c
 275.582 208 272 211.582 272 216 c 272 238.09 254.09 256 232 256 c 209.91
 256 192 238.09 192 216 c 192 167.398 231.398 128 280 128 c 328.602 128 
368 167.398 368 216 c 368 291.109 307.109 352 232 352 c 156.891 352 96 291.109
 96 216 c 96 117.312 176.801 40 280 40 c 383.199 40 464 117.312 464 216 
c 464 339.711 363.711 440 240 440 c 116.289 440 16 339.711 16 216 c 16 211.582
 12.418 208 8 208 c 3.582 208 0 211.582 0 216 c h
0 216 m W n
[1 0 0 -1 0 456] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0705882 0.760784 0.913725 ]
      /C1 [ 0.768627 0.443137 0.929412 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.768627 0.443137 0.929412 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.964706 0.309804 0.34902 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   ]
   /Bounds [ 0.5 0.982 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 240 432 240 0 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end restore
%%EOF
