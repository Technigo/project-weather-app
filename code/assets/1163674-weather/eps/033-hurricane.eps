%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.2 (http://cairographics.org)
%%CreationDate: Tue Oct  2 09:27:16 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 480 480
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 480 480
%%EndPageSetup
q 0 0 480 480 rectclip q
q
8 88 m 12.418 88 16 91.582 16 96 c 16.129 194.574 80.578 281.523 174.855
 310.312 c 155.203 292.211 144.016 266.719 144 240 c 144.148 107.516 251.516
 0.148 384 0 c 388.418 0 392 3.582 392 8 c 392 12.418 388.418 16 384 16 
c 285.426 16.129 198.477 80.578 169.688 174.855 c 187.789 155.203 213.281
 144.016 240 144 c 372.484 144.148 479.852 251.516 480 384 c 480 388.418
 476.418 392 472 392 c 467.582 392 464 388.418 464 384 c 463.871 285.426
 399.422 198.477 305.145 169.688 c 324.797 187.789 335.984 213.281 336 240
 c 335.852 372.484 228.484 479.852 96 480 c 91.582 480 88 476.418 88 472
 c 88 467.582 91.582 464 96 464 c 194.574 463.871 281.523 399.422 310.312
 305.145 c 292.211 324.797 266.719 335.984 240 336 c 107.516 335.852 0.148
 228.484 0 96 c 0 91.582 3.582 88 8 88 c h
320 240 m 320 195.816 284.184 160 240 160 c 195.816 160 160 195.816 160
 240 c 160 284.184 195.816 320 240 320 c 284.164 319.953 319.953 284.164
 320 240 c h
320 240 m W n
[1 0 0 -1 0 480] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0705882 0.760784 0.913725 ]
      /C1 [ 0.768627 0.443137 0.929412 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.768627 0.443137 0.929412 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.964706 0.309804 0.34902 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   ]
   /Bounds [ 0.5 0.982 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 240 480 240 0 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end restore
%%EOF
